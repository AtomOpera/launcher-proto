{"version":3,"sources":["initial-data.js","avatar.jsx","icon.jsx","emptyIcon.jsx","column.jsx","index.jsx"],"names":["initialData","icons","id","content","columns","title","iconIds","columnOrder","AppIcon","styled","div","Container","Name","Avatar","props","useState","provided","dragHandleProps","href","icon","key","onClick","event","window","open","preventDefault","style","cursor","src","alt","url","replace","split","toUpperCase","isDragging","Icon","draggableId","index","snapshot","draggableProps","ref","innerRef","IconList","h6","isDraggingOver","InlineEditExample","column","editValue","setEditValue","InlineEditableTextfield","defaultValue","onConfirm","newValue","onTitleEdited","placeholder","isCompact","Column","droppableId","type","droppableProps","map","Outer","Inner","App","data","setData","newData","console","log","JSON","stringify","Date","date","setDate","useEffect","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","myDate","getDate","month","hour","getHours","wish","time","toLocaleTimeString","minute","second","addPP","a","fetch","method","headers","body","then","response","status","statusText","text","catch","err","error","save","textAlign","onDragEnd","result","document","color","backgroundColor","destination","source","newColumnOrder","Array","from","splice","start","finish","newIconIds","newColumn","startIconIds","newStart","finishIconIds","newFinish","direction","elem","iconId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3f2e7b3.chunk.js","sourcesContent":["const initialData = {\r\n  icons: {\r\n    'icon-1': { id: 'icon-1', content: 'https://www.gmail.com'},\r\n    'icon-2': { id: 'icon-2', content: 'https://news.google.co.uk'},\r\n    'icon-3': { id: 'icon-3', content: 'https://www.9gag.com'},\r\n    'icon-4': { id: 'icon-4', content: 'https://codesandbox.io'},\r\n    'icon-5': { id: 'icon-5', content: 'https://www.facebook.com/'},\r\n    'icon-6': { id: 'icon-6', content: 'http://www.youtube.com/'},\r\n    'icon-7': { id: 'icon-7', content: 'http://www.visualcapitalist.com'},\r\n    'icon-8': { id: 'icon-8', content: 'https://www.glasgow.gov.uk/forms/refuseandrecyclingcalendar/AddressSearch.aspx'},\r\n    'icon-9': { id: 'icon-9', content: 'https://docs.google.com/spreadsheets/d/1t6ykj2HWJfI97DTQT2ISyryjMZS5NhJ5DpeBQBvBPoQ/edit?ts=5e5536d1#gid=1505922450'},\r\n    'icon-10': { id: 'icon-10', content: 'https://keep.google.com/u/0'},\r\n    'icon-11': { id: 'icon-11', content: 'https://www.codewars.com/'},\r\n    'icon-12': { id: 'icon-12', content: 'https://www.dndbeyond.com/'},\r\n    'icon-13': { id: 'icon-13', content: 'https://twitter.com/'},\r\n    'icon-14': { id: 'icon-14', content: 'https://stackblitz.com/'},\r\n    'icon-15': { id: 'icon-15', content: 'http://dnd5e.wikidot.com/'},\r\n    'icon-16': { id: 'icon-16', content: 'http://translate.google.com/#'},\r\n    'icon-17': { id: 'icon-17', content: 'https://www.sendrecurring.com/manage'},\r\n    'icon-18': { id: 'icon-18', content: 'https://outlook.live.com/owa/'},\r\n    'icon-19': { id: 'icon-19', content: 'http://chrome://flags'},\r\n    'icon-20': { id: 'icon-20', content: 'https://drive.google.com/?tab=wo&authuser=0#my-drive'},\r\n  },\r\n  columns: {\r\n    'column-1': {\r\n      id: 'column-1',\r\n      title: 'Column-1',\r\n      iconIds: ['icon-1', 'icon-2', 'icon-3', 'icon-4', 'icon-5'],\r\n    },\r\n    'column-2': {\r\n      id: 'column-2',\r\n      title: 'Column-2',\r\n      iconIds: ['icon-6', 'icon-7', 'icon-8', 'icon-9', 'icon-10'],\r\n    },\r\n    'column-3': {\r\n      id: 'column-3',\r\n      title: 'Column-3',\r\n      iconIds: ['icon-11', 'icon-12', 'icon-13', 'icon-14', 'icon-15'],\r\n    },\r\n    'column-4': {\r\n      id: 'column-4',\r\n      title: 'Column-4',\r\n      iconIds: ['icon-16', 'icon-17', 'icon-18', 'icon-19', 'icon-20'],\r\n    },\r\n  },\r\n  // Facilitate reordering of the columns\r\n  columnOrder: ['column-1', 'column-2', 'column-3' , 'column-4'],\r\n};\r\n\r\nexport default initialData;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst dev=false;\r\n\r\n// const dev=true;\r\n/* border: ${highlight ? '1px solid ': '0px'}; */\r\n/* box-shadow: ${highlight ? '0 0px 8px 0 grey': ''}; */\r\n\r\nconst AppIcon = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  /* #f1f1f1 */\r\n\r\n  border: ${dev ? '1px solid lightgrey': '0px'};\r\n\r\n\r\n  /* border: 1px solid lightgrey; */\r\n  background: #f1f1f1;\r\n  /* box-shadow: 0 0px 4px 0 rgba(0, 0, 0, 0.2); */\r\n  /* box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); */\r\n  /* background-image: linear-gradient(#dde, #aab); */\r\n  /* box-shadow: 0 -2px 5px 0 rgba(0, 0, 0, 0.2); */\r\n  border-radius: 50px; /* 50 for circle, 9 for iOS square*/\r\n  /* 60 60 for iOS square style */\r\n  width: 50px;\r\n  height: 50px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  /* background-image: linear-gradient(#dde, #aab);\r\n  border-radius: 9px;\r\n  width: 60px;\r\n  height: 60px; */\r\n  border: ${dev ? '1px solid lightgrey': '0px'};\r\n  width: 60px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  max-width: 80px;\r\n\r\n  border: ${dev ? '1px solid lightgrey': '0px'};\r\n  /* margin-top: -15px; */\r\n\r\n  color:black;\r\n  font-size:8px;\r\n  padding:5px 5px 5px 5px;\r\n  display:block;\r\n  text-transform:uppercase;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  font-family:'Josefin Sans';\r\n  letter-spacing:0.5px;\r\n`;\r\n\r\n\r\n\r\nconst Handle = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: white;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 4px;\r\n  // margin-right: 8px;\r\n`;\r\n\r\n\r\nexport default function Avatar(props) {\r\n  const [data, setData] = useState('');\r\n  const [highlight, setHighlight] = useState(false);\r\n\r\n  function domainName(url){\r\n    const cleanUrl = url.replace('http://', '').replace('https://', '').replace('www.', '');\r\n    return cleanUrl.split('.')[0];\r\n  };\r\n\r\n  const getDomIcon = \"https://s2.googleusercontent.com/s2/favicons?domain=\";\r\n\r\n  const getUrlIcon = \"https://s2.googleusercontent.com/s2/favicons?domain_url=\";\r\n\r\n\r\n  return (\r\n    <Container \r\n      {...props.provided.dragHandleProps}\r\n      href={props.icon.content} \r\n      key={props.icon.content}\r\n      // onMouseEnter={()=>{setHighlight(true)}}\r\n      // onMouseLeave={()=>{setHighlight(false)}}\r\n      onClick={\r\n        (event)=> {\r\n          window.open(`${props.icon.content}`, \"_blank\");\r\n          event.preventDefault();\r\n        }\r\n      }\r\n      style={{cursor:\"pointer\"}}\r\n    >\r\n      {/* <a href={props.icon.content} \r\n            key={props.icon.content}\r\n            onClick={\r\n              (event)=> {\r\n                window.open(`${props.icon.content}`, \"_blank\");\r\n                event.preventDefault();\r\n              }\r\n            }\r\n          >  */}\r\n        {/* <Handle {...props.provided.dragHandleProps}/> */}\r\n        <AppIcon>  \r\n          <img src={getUrlIcon + props.icon.content} alt={props.icon.content} />\r\n        </AppIcon> \r\n        {\" \"}\r\n        <Name>{domainName(props.icon.content).toUpperCase()}</Name>\r\n      {/* </a> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport Avatar from './avatar';\r\n\r\nconst Container = styled.div`\r\n  /* border: 1px solid lightgrey; */\r\n  border-radius: 2px;\r\n  /* padding: 8px; */\r\n  /* margin-bottom: 8px; */\r\n  margin-bottom: 4px;\r\n  /* background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')}; */\r\n  background-color: white;\r\n  width: 60px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n// const Handle = styled.div`\r\n//   width: 20px;\r\n//   height: 20px;\r\n//   background-color: orange;\r\n//   border-radius: 4px;\r\n//   margin-right: 8px;\r\n// `;\r\n\r\nexport default function Icon(props) {\r\n\r\n\r\n  return (\r\n    <Draggable \r\n      draggableId={props.icon.id}\r\n      index={props.index}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          // {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n        >\r\n          {/* <Handle {...provided.dragHandleProps}/> */}\r\n          <Avatar icon={props.icon} provided={provided}/>\r\n          {/* {domainName(props.icon.content).toUpperCase()} */}\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport Avatar from './avatar';\r\n\r\nconst Container = styled.div`\r\n  /* border: 1px solid lightgrey; */\r\n  border-radius: 2px;\r\n  /* padding: 8px; */\r\n  /* margin-bottom: 8px; */\r\n  margin-bottom: 4px;\r\n  /* background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')}; */\r\n  background-color: white;\r\n  width: 60px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AppIcon = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  /* background-image: linear-gradient(#dde, #aab); */\r\n  border-radius: 50px;\r\n  width: 60px;\r\n  height: 60px;\r\n`;\r\n\r\n// const Container = styled.div`\r\n//   // border: 1px solid lightgrey;\r\n//   border-radius: 2px;\r\n//   padding: 8px;\r\n//   margin-bottom: 8px;\r\n//   background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\r\n\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n// `;\r\n\r\n// const Handle = styled.div`\r\n//   width: 20px;\r\n//   height: 20px;\r\n//   background-color: orange;\r\n//   border-radius: 4px;\r\n//   margin-right: 8px;\r\n// `;\r\n\r\nfunction Button(props){\r\n  const [ButtonPressed, setButtonPressed] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  return(\r\n    <>{!ButtonPressed \r\n        && (\r\n          <AppIcon\r\n            style={{\r\n              cursor: \"pointer\"\r\n            }}\r\n            \r\n            onClick={() => {setButtonPressed(true)}}> + \r\n\r\n          </AppIcon>\r\n        )}\r\n      {ButtonPressed \r\n        && (\r\n          <>\r\n            <input \r\n              autoFocus\r\n              onFocus={e => e.currentTarget.select()}\r\n              onChange={e => setInput(e.currentTarget.value)}/>\r\n            <button onClick={() => {\r\n              setButtonPressed(false);\r\n              console.log(props.col);\r\n              props.addLink(input, props.col);\r\n\r\n              }}> OK </button>\r\n              {/* {input} */}\r\n          </>\r\n        )}\r\n      {/* <div>{ButtonPressed.toString()}</div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function Icon(props) {\r\n\r\n\r\n  return (\r\n    <Draggable \r\n      draggableId={\"plus\"+props.icon}\r\n      index={props.index}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n        >\r\n          {/* <Handle {...provided.dragHandleProps}/> */}\r\n          <Button />\r\n          {/* {domainName(props.icon.content).toUpperCase()} */}\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { InlineEditableTextfield } from '@atlaskit/inline-edit';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Icon from './icon';\r\nimport EmptyIcon from './emptyIcon'\r\n\r\nconst Container = styled.div`\r\n  /* margin: 2px; */\r\n  /* border: 1px solid lightgrey; */\r\n  background-color: white;\r\n  border-radius: 2px;\r\n  width: 25%;\r\n  /* width: 220px; */\r\n\r\n  display: flex;\r\n  flex-direction: column; \r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h6`\r\n  padding: 6px;\r\n`;\r\nconst IconList = styled.div`\r\n  padding: 6px;\r\n  transition: background-color 0.2s ease;\r\n  /* background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};  */\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n`;\r\n\r\nconst InlineEditExample = (props) => {\r\n  const [editValue, setEditValue] = useState(props.column.title);\r\n\r\n  return (\r\n    // <div\r\n    // // {...props.dragHandleProps}\r\n    //   // style={{\r\n    //   //   padding: `${gridSize()}px ${gridSize()}px ${gridSize() * 6}px`,\r\n    //   // }}\r\n    // >\r\n      <InlineEditableTextfield\r\n        \r\n        defaultValue={editValue}\r\n        //label=\"Inline editable textfield\"\r\n        onConfirm={newValue => {\r\n          props.onTitleEdited(props.column, newValue);\r\n          setEditValue(newValue);\r\n        }}\r\n        placeholder=\"Click to enter text\"\r\n        isCompact\r\n      />\r\n    // </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function Column(props) {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Draggable \r\n      draggableId={props.column.id}\r\n      index={props.index}\r\n    >\r\n      {(provided) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <div {...provided.dragHandleProps}>\r\n          <InlineEditExample\r\n            onTitleEdited={props.onTitleEdited}\r\n            column={props.column}\r\n            dragHandleProps={provided.dragHandleProps}\r\n          />\r\n          </div>\r\n          {/* {editMode \r\n          ? <input\r\n              {...provided.dragHandleProps}\r\n              style={{padding:'6px'}}\r\n           /> \r\n          : <Title\r\n            onClick={()=>{setEditMode(true)}}\r\n            {...provided.dragHandleProps}\r\n          >{props.title}</Title>} */}\r\n          {/* <div>{props.icons.length}</div> */}\r\n          <Droppable \r\n            droppableId={props.column.id}\r\n            type=\"icon\"\r\n          >\r\n            {(provided, snapshot) => (\r\n              <IconList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {props.icons.map((icon, index) =>\r\n                  <Icon \r\n                    key={icon.id} \r\n                    icon={icon} \r\n                    index={index}\r\n                  />\r\n                )}\r\n                \r\n                {/* <EmptyIcon \r\n                  key={props.icons.length} \r\n                  icon={props.column.id} \r\n                  index={props.icons.length}\r\n                /> */}\r\n                {provided.placeholder}\r\n                \r\n              </IconList>\r\n            )}\r\n          </Droppable>\r\n          \r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\nimport \"./styles.css\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: no-wrap;\n  justify-content: space-around;\n`;\n\nconst Outer = styled.div`\n  // border: 1px solid red;\n  margin: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  // background-color: black;\n`;\n\nconst Inner = styled.div`\n  width: 330px;\n  background-color: white;\n  border-radius: 20px;\n  padding: 10px;\n  // margin: 5px;\n`;\n\nconst MainBody = styled.div`\n  margin: 0 auto;\n  width: 330px;\n  background-color: white;\n  border-radius: 20px;\n  padding: 5px;\n`;\n\nconst MainBody2 = styled.div`\n  /* border: 1px solid lightgrey; */\n  \n  /* position: absolute; */\n  border-bottom: 50px;\n  padding-bottom: 50px;\n  margin-bottom: 50px;\n\n  left: 50%;\n  margin-left: -175px;\n  \n  width: 340px;\n  background-color: white;\n  padding: 5px;\n  \n\n  border-radius: 20px;\n\n  /* display: flex;\n  flex-direction: column; \n  justify-content: center;\n  align-items: center; */\n`;\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n  let newData = data;\n\n  function onTitleEdited(column, newValue) {\n    newData.columns[column.id].title = newValue;\n    console.log(JSON.stringify(newData.columns));\n    setData(newData);\n    return;\n  };\n\n  function onDragEnd(result) {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    // TODO: reorder our column\n    const {\n      destination, \n      source, \n      draggableId,\n      type,\n    } = result;\n\n    if(!destination){\n      return;\n    }\n\n    if(\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if(type === 'column'){\n      const newColumnOrder = Array.from(data.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      console.log(newColumnOrder);\n      const newData = {\n        ...data,\n        columnOrder: newColumnOrder,\n      };\n\n      setData(newData);\n      //console.log(newData.columnOrder);\n      return;\n    }\n\n    // const column = data.columns[source.droppableId];\n    const start = data.columns[source.droppableId];\n    const finish = data.columns[destination.droppableId];\n    \n    if (start === finish){\n      const newIconIds = Array.from(start.iconIds);\n      newIconIds.splice(source.index, 1);\n      newIconIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        iconIds: newIconIds,\n      };\n\n      const newData = {\n        ...data,\n        columns: {\n          ...data.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setData(newData);\n      return;\n    }\n    \n    // Moving from one list to another\n    const startIconIds = Array.from(start.iconIds);\n    startIconIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      iconIds: startIconIds,\n    };\n\n    const finishIconIds = Array.from(finish.iconIds);\n    finishIconIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      iconIds: finishIconIds,\n    };\n\n    const newData = {\n      ...data,\n      columns: {\n        ...data.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setData(newData);\n    return;\n\n  };\n\n  var [date,setDate] = useState(new Date());\n    \n  useEffect(() => {\n      var timer = setInterval(()=>setDate(new Date()), 1000 )\n      return function cleanup() {\n          clearInterval(timer)\n      }\n  \n  });\n\n  const locale = 'en';\n  // const today = new Date();\n\n  const day = date.toLocaleDateString(locale, { weekday: 'long' });\n  const myDate = `${day}, ${date.getDate()} ${date.toLocaleDateString(locale, { month: 'long' })}\\n\\n`;\n\n  const hour = date.getHours();\n  const wish = `Good ${(hour < 12 && 'Morning') || (hour < 17 && 'Afternoon') || 'Evening'}\\n\\n `;\n\n  const time = date.toLocaleTimeString({ hour: 'numeric', minute: 'numeric', second: 'numeric' });\n\n  // document.body.style = 'background: black;';\n\n  return (\n    <>\n      <button onClick={() => {save();}}>write!</button>\n      <br />\n      <br />\n\n      <Outer><Inner>\n      {/* <MainBody> */}\n        <h2 style={{textAlign: \"center\"}}>\n          {wish}  \n        </h2>\n        <h2 style={{textAlign: \"center\"}}>\n          {myDate} {time}\n        </h2>\n        <DragDropContext\n          onDragEnd={onDragEnd}\n\n        >\n          <Droppable \n            droppableId=\"all-columns\" \n            direction=\"horizontal\" \n            type=\"column\"\n          >\n            {(provided) => (\n              <Container\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {data.columnOrder.map((elem, index) => (\n                  <Column \n                    key={data.columns[elem].id}\n                    title={data.columns[elem].title} \n                    column={data.columns[elem]}\n                    icons={data.columns[elem].iconIds.map(iconId => data.icons[iconId])}\n                    index={index}\n                    onTitleEdited={onTitleEdited}\n                  />\n                ))\n                }\n                {provided.placeholder}\n              </Container>\n            )}\n            \n          </Droppable>\n        </DragDropContext>\n        <br />\n        </Inner></Outer>\n      {/* </MainBody> */}\n      \n    </>\n  );\n};\n\nfunction save() {\n  const addPP = async () => {\n    const bodyData = \"lalala\";\n    fetch('https://vwxjf.sse.codesandbox.io/new', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-16',\n      },\n      body: bodyData,\n    })\n      .then((response) => {\n        console.log(\n          `Response: ${response.status} ${response.statusText}`\n        );\n        return response.text();\n      })\n      .then((text) => console.log(text))\n      .catch((err) => console.error(err));\n  };\n\n  const fetchito = async() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((res) => console.log(res))\n      .catch((e) => console.error(e));\n  };\n  // fetchito();\n  addPP();\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}